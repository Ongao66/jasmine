name: Build for ARM64 Debian12

on:
  workflow_dispatch:

env:
  RUST_TOOLCHAIN: nightly-2024-12-02

jobs:
  build_linux_arm64:
    name: Build Linux ARM64
    runs-on: ubuntu-latest
    container: debian:12

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y \
            build-essential \
            curl \
            git \
            libfuse2 \
            libgl1-mesa-dev \
            libgtk-3-dev \
            liblzma-dev \
            ninja-build \
            xorg-dev

      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          target: aarch64-unknown-linux-gnu
          profile: minimal
          override: true

      - name: Install AppImage tools
        run: |
          curl -JOL https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-aarch64.AppImage
          chmod a+x appimagetool-aarch64.AppImage
          mv appimagetool-aarch64.AppImage appimagetool

      - name: Build Rust library
        run: |
          cargo build --release --target=aarch64-unknown-linux-gnu
          cp target/aarch64-unknown-linux-gnu/release/librust.a linux/
          cbindgen src/lib.rs -l c++ > linux/rust.h

      - name: Build Flutter application
        run: |
          flutter config --enable-linux-desktop
          flutter build linux --release --target-platform linux-arm64
          mv build/linux/arm64/release/bundle/{jasmine,AppRun}
          cp linux/appimage/* build/linux/arm64/release/bundle/
          ./appimagetool build/linux/arm64/release/bundle/
          mv *.AppImage build/linux-arm64.AppImage

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jasmine-arm64.AppImage
          path: build/linux-arm64
